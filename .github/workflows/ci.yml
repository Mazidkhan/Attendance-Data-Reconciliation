name: Python Syntax Check, Docker Build, Push, and Deploy to Minikube

on:
  push:
    branches:
      - '*'

jobs:
  start:
    runs-on: ubuntu-latest
    steps:
      - name: Start the pipeline
        run: echo "Starting the pipeline..."

  check_python_syntax:
    runs-on: ubuntu-latest
    needs: start
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Checking Python syntax
        run: |
          for file in $(find . -name "*.py"); do
            echo "Checking $file"
            python -m py_compile "$file" || { echo "Syntax error in $file"; exit 1; }
          done

  unit_tests:
    runs-on: ubuntu-latest
    needs: check_python_syntax
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run unit tests
        run: |
          python -m unittest discover -s tests/unit

  integration_tests:
    runs-on: ubuntu-latest
    needs: unit_tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run integration tests
        run: |
          python -m unittest discover -s tests/integration

  performance_tests:
    runs-on: ubuntu-latest
    needs: integration_tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run performance tests
        run: |
          # Replace the following line with your performance testing commands
          echo "Running performance tests..."
          # Example: python performance_tests.py

  build_and_push_docker_image:
    runs-on: ubuntu-latest
    needs: performance_tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: mazid262/attendance-data-reconciliation:latest

  end:
    runs-on: ubuntu-latest
    needs: build_and_push_docker_image
    steps:
      - name: End the pipeline
        run: echo "Pipeline finished."
